// Copyright 2018 The Bazel Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package remote_logging;

import "google/devtools/remoteexecution/v1test/remote_execution.proto";
import "google/longrunning/operations.proto";
import "google/rpc/status.proto";
import "google/watcher/v1/watch.proto";


option java_package = "com.google.devtools.build.lib.remote.logging";

// A single log entry for gRPC calls related to remote execution.
message LogEntry {
  // Request metadata included in call.
  google.devtools.remoteexecution.v1test.RequestMetadata metadata = 1;

  // Status of the call on close.
  google.rpc.Status status = 2;

  // Full method name of the method called as returned from
  // io.grpc.MethodDescriptor.getFullMethodName() (i.e. in format
  // $FULL_SERVICE_NAME/$METHOD_NAME).
  string method_name = 3;

  // Method specific details for this call.
  RpcCallDetails details = 4;

}

// Contains details for specific types of calls.
message RpcCallDetails {
  // Details for a call to
  // google.devtools.remoteexecution.v1test.Execution.Execute.
  message ExecuteDetails {
    // The google.devtools.remoteexecution.v1test.ExecuteRequest sent by the
    // call.
    google.devtools.remoteexecution.v1test.ExecuteRequest request = 1;
    // The google.longrunning.Operation received by the Execute call.
    google.longrunning.Operation operation = 2;
  }

  // Details for a call to
  // google.devtools.remoteexecution.v1test.Execution.GetActionResult.
  message GetActionResultDetails {
    // The google.devtools.remoteexecution.v1test.GetActionResultRequest sent by the
    // call.
    google.devtools.remoteexecution.v1test.GetActionResultRequest request = 1;
    // If received, The google.devtools.remoteexecution.v1test.ActionResult.
    google.devtools.remoteexecution.v1test.ActionResult result = 2;
  }


  // Details for a call to google.watcher.v1.Watch.
  message WatchDetails {
    // The google.watcher.v1.Request sent by the call.
    google.watcher.v1.Request request = 1;
    // Each google.watcher.v1.ChangeBatch received from the streaming call.
    repeated google.watcher.v1.ChangeBatch change_batches = 2;
  }

  oneof details {
    ExecuteDetails execute = 1;
    GetActionResultDetails get_action_result = 2;
    WatchDetails watch = 3;
  }
}